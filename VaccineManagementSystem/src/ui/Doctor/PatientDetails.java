/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Doctor;

import model.EcoSystem;
import model.Employee.Employee;
import model.WorkQueue.Order;
import model.WorkQueue.Product;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import util.TwilioSMSUtil;
import static util.UtilClass.isOnlyTextWithWhiteSpaces;
import static util.UtilClass.isPhoneNumberVerified;
import static util.UtilClass.isValidTextString;

/**
 *
 * @author pawan
 */
public class PatientDetails extends javax.swing.JPanel {

    Order order;
    JPanel userProcessContainer;
    EcoSystem ecoSystem;

    /**
     * Creates new form PatientDetails
     */
    public PatientDetails(JPanel userProcessContainer, Order order, EcoSystem ecoSystem) {
        initComponents();
        this.order = order;
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtCard = new javax.swing.JTextField();
        btnCompletePayment = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jtxtMobile = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Name");
        add(jLabel1);
        jLabel1.setBounds(500, 330, 70, 18);

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("CardNumber");
        add(jLabel2);
        jLabel2.setBounds(480, 380, 110, 18);

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName);
        txtName.setBounds(590, 310, 200, 40);
        add(txtCard);
        txtCard.setBounds(590, 363, 210, 40);

        btnCompletePayment.setBackground(new java.awt.Color(0, 153, 0));
        btnCompletePayment.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnCompletePayment.setForeground(new java.awt.Color(255, 255, 255));
        btnCompletePayment.setText("Complete payment");
        btnCompletePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletePaymentActionPerformed(evt);
            }
        });
        add(btnCompletePayment);
        btnCompletePayment.setBounds(560, 570, 210, 60);

        btnBack.setBackground(new java.awt.Color(0, 102, 204));
        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(17, 9, 120, 40);

        jtxtMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtMobileActionPerformed(evt);
            }
        });
        add(jtxtMobile);
        jtxtMobile.setBounds(590, 423, 210, 40);

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel5.setText("Mobile Number");
        add(jLabel5);
        jLabel5.setBounds(460, 430, 120, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnCompletePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletePaymentActionPerformed
        if (order.getProductList().size() == 0) {
            JOptionPane.showMessageDialog(this, "Please add items to the cart");
            return;
        }
        
        try {
            if (!isOnlyTextWithWhiteSpaces(txtName.getText())) {
                JOptionPane.showMessageDialog(this, "Please enter valid name");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter valid name");
        }
        
        

        try {
            if (!isValidTextString(txtCard.getText())) {
                JOptionPane.showMessageDialog(this, "Please enter valid card no");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter valid card no");
        }


        try {
            if (!isPhoneNumberVerified(jtxtMobile.getText())) {
                JOptionPane.showMessageDialog(this, "Please enter valid phone");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter valid phone");
        }
        
        
        
        if (txtCard.getText().isEmpty() || txtName.getText().isEmpty() || jtxtMobile.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are mandatory");
            return;
        }
        if (checkCardValid(txtCard.getText())) {
            Employee customer = new Employee(txtName.getText(), txtCard.getText());
            Order newOrder = new Order();
            newOrder.setSender(order.getSender());
            newOrder.setSenderEnterprise(order.getSenderEnterprise());
            for (Product prod : order.getProductList()) {
                newOrder.getProductList().add(prod);
            }
            newOrder.setStatus("completed");
            ecoSystem.getWorkQueue().getWorkRequestList().add(newOrder);
            order.getProductList().clear();
            String mobile = "+1" + jtxtMobile.getText();
            TwilioSMSUtil
                    .sendTextMessage(mobile,
                            "Hi " + txtName.getText() + ", " + "Thank you for choosing us. Your payment has been debited from Card ending xxxx" + txtCard.getText().substring(12) + ". Stay safe and Healthy.");

            JOptionPane.showMessageDialog(this, "Transaction complete");
        } else {
            JOptionPane.showMessageDialog(this, "Please enter valid card number");
        }
    }//GEN-LAST:event_btnCompletePaymentActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorTransactionHome dwjp = (DoctorTransactionHome) component;
        dwjp.populateProductList();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jtxtMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtMobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtMobileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompletePayment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jtxtMobile;
    private javax.swing.JTextField txtCard;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
    public boolean checkCardValid(String card) {
        Pattern pattern = Pattern.compile("^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(card);
        return matcher.find();
    }
}
